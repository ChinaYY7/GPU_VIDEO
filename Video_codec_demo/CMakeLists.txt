CMAKE_MINIMUM_REQUIRED (VERSION 3.5)
PROJECT(VIDEO_CODEC_DEMO)

MESSAGE(STATUS "<VIDEO_CODEC_DEMO>")

#设置编译模式
SET(CMAKE_BUILD_TYPE Debug)
SET(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS ON)
IF (CMAKE_BUILD_TYPE STREQUAL Debug)
	SET (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} -std=c++11 -g -O0 -pthread")
	#MESSAGE (STATUS "CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG}")
	MESSAGE (STATUS "CMAKE_BUILD_TYPE = Debug -O0")
	ADD_DEFINITIONS (-DDEBUG)  #向 C/C++编译器添加-D 定义,即代码中 ifdef DEBUG中的内容会执行
ELSE()
	SET (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} -std=c++11 -O2 -pthread")
	#MESSAGE (STATUS "CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE}")
	MESSAGE (STATUS "CMAKE_BUILD_TYPE = Release -O2")
ENDIF()

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
SET(ARCHIVE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/slib)

SET(third_party_path ${CMAKE_SOURCE_DIR}/third_party)

INCLUDE_DIRECTORIES(${third_party_path}/nv_enc_dec_9.1.23/include)
INCLUDE_DIRECTORIES(${third_party_path}/ffmpeg_4.2.1/include)
INCLUDE_DIRECTORIES(${third_party_path}/libgpujpeg/include)
INCLUDE_DIRECTORIES(/usr/local/cuda/include)

LINK_DIRECTORIES(/usr/local/cuda/lib64)
LINK_DIRECTORIES(${third_party_path}/nv_enc_dec_9.1.23/lib)
LINK_DIRECTORIES(${third_party_path}/ffmpeg_4.2.1/lib)
LINK_DIRECTORIES(${third_party_path}/libgpujpeg/lib)


ADD_SUBDIRECTORY (${CMAKE_CURRENT_SOURCE_DIR}/src)


